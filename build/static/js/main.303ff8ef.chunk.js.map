{"version":3,"sources":["components/contactForm/styledForm.js","components/contactForm/ContactForm.js","components/contactList/styledList.js","components/contactList/ContactList.js","components/filter/styledFilter.js","components/filter/Filter.js","components/styledApp.js","components/App.js","index.js"],"names":["FormWrapper","styled","form","ContactForm","addContact","useState","name","number","state","setState","handleChange","e","target","value","prev","className","onSubmit","preventDefault","type","onChange","UlContactList","ul","ContactList","contacts","deleteContact","map","id","data-id","onClick","FilterWrapper","div","Filter","onChangeFilter","placeholder","PhonebookWrapper","App","filter","useEffect","localStorage","setItem","JSON","stringify","localContacts","getItem","parse","contactsObj","contact","uuidv4","console","log","length","some","toLowerCase","alert","prevState","includes","getVisibleContacts","contactId","dataset","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.303ff8ef.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const FormWrapper = styled.form`\nmargin-bottom: 20px;\n.label{\n    font-size: 20px;\n    text-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n}\n.input{\n    margin: 5px 0 20px 0;\n    padding: 5px 10px;\n  \n    width: 100%;\n    height: 30px;\n\n    border-radius: 5px;\n    border-color: #ffefd5;\n     &:hover {\n   box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);}\n}\n.buttonWrapper{\n   display:flex;\n   justify-content:flex-end;\n}\n.button{\n    \t\n   width: 25%;\n   padding: 5px 10px; \n   font-size: 20px;\n   border-radius: 5px;\n   border-color: #ffefd5;\n   text-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n   background-color:#F5F5DC;\n   cursor: pointer;\n   \n   &:hover {\n       background-color:#3CB371;\n       box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);}\n}\n\n`","import React, { useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { FormWrapper } from './styledForm';\n// ========================================\n// import React, { Component } from 'react';\n// import PropTypes from \"prop-types\";\n// import { FormWrapper } from './styledForm';\n\n// ========================= hooks ContactForm ================================\n\nconst ContactForm = ({ addContact }) => {\n    const [state, setState] = useState({\n        name: '',\n        number: '',\n    });\n\n    const hadlleSubmit = e => {\n        e.preventDefault();\n        addContact({ ...state })\n        setState({\n            name: '',\n            number: '',\n        })\n    }\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        setState(prev => ({\n            ...prev, [name]: value\n        }))\n    }\n\n    return (\n        <>\n            <FormWrapper className=\"wrapper\" onSubmit={hadlleSubmit}>\n                <label className=\"label\">Name\n                     <input className=\"input\" type=\"text\" name=\"name\" value={state.name} onChange={handleChange}></input>\n                </label>\n                <label className=\"label\">Number\n                     <input className=\"input\" type=\"tel\" name=\"number\" value={state.number} onChange={handleChange}></input>\n                </label>\n                <div className=\"buttonWrapper\">\n                    <button className=\"button\" type=\"submit\">Add contact</button>\n                </div>\n            </FormWrapper>\n\n        </>\n    )\n}\n\nexport default ContactForm\n\nContactForm.propTypes = {\n    addContact: PropTypes.func.isRequired\n};\n// ========================= class ContactForm ================================\n// export default class ContactForm extends Component {\n//     state = {\n//         name: '',\n//         number: '',\n//     }\n\n//     hadlleSubmit = e => {\n//         e.preventDefault();\n\n\n//         this.props.addContact({ ...this.state })\n//         this.setState({\n//             name: '',\n//             number: '',\n//         })\n//     }\n\n//     handleChange = e => {\n//         const { name, value } = e.target;\n//         this.setState({\n//             [name]: value\n//         })\n//     }\n\n//     render() {\n//         const { name, number } = this.state;\n//         return (\n\n//             <>\n\n//                 <FormWrapper className=\"wrapper\" onSubmit={this.hadlleSubmit}>\n//                     <label className=\"label\">Name\n//                     <input className=\"input\" type=\"text\" name=\"name\" value={name} onChange={this.handleChange}></input>\n//                     </label>\n//                     <label className=\"label\">Number\n//                     <input className=\"input\" type=\"tel\" name=\"number\" value={number} onChange={this.handleChange}></input>\n//                     </label>\n//                     <div className=\"buttonWrapper\">\n//                         <button className=\"button\" type=\"submit\">Add contact</button>\n//                     </div>\n//                 </FormWrapper>\n\n//             </>\n//         )\n\n//     }\n// }\n\n// ContactForm.propTypes = {\n//     addContact: PropTypes.func.isRequired\n// };","import styled from \"styled-components\";\n\nexport const UlContactList = styled.ul`\nlist-style: none;\n.itemContact{\n    display:flex;\n    justify-content: space-between;\n    font-size: 20px;\n    text-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n\n    border-radius: 5px;\n    border-color: #ffefd5;\n     &:not(:last-child) {\n      margin-bottom: 10px;}\n     &:hover {\n   box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);}\n}\n\n}\n.button{\n   width: 25%;\n   padding: 5px 10px; \n   \t\n   font-size: 20px;\n   text-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n\n   border-radius: 5px;\n   border-color: #ffefd5;\n\n   background-color:#F5F5DC;\n   cursor: pointer;\n   \n   &:hover {\n       background-color:#3CB371;\n       box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);}\n}\n`;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { UlContactList } from './styledList';\n\n\nexport const ContactList = ({ contacts, deleteContact }) => {\n    return (\n        <UlContactList className=\"wrapper\">\n            {contacts.map(({ id, name, number }) => {\n                return (\n                    <li key={id} className=\"itemContact\">\n                        {`${name}:  ${number}`}\n                        <button className=\"button\" type=\"button\" data-id={id} onClick={deleteContact}>Delete</button>\n                    </li>\n\n                )\n            })}\n\n        </UlContactList >\n    )\n}\n\nContactList.propTypes = {\n    deleteContact: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    })),\n}","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\nmargin-bottom: 20px;\n.titleFilter{\n\ncolor:#2F4F4F;\ntext-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n}\n.input{\n    margin: 10px 0 20px 0;\n    padding: 5px 10px;\n  \n    width: 100%;\n    height: 30px;\n\n    border-radius: 5px;\n    border-color: #ffefd5;\n     &:hover {\n   box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);}\n}\n`;","import React from 'react'\nimport PropTypes from \"prop-types\";\nimport { FilterWrapper } from './styledFilter'\n\nexport const Filter = ({ value, onChangeFilter }) => {\n    // const onHandleChangeFilter = e => {\n    //     onChangeFilter(e.target.value)\n    // }\n    return (\n\n        <FilterWrapper className=\"wrapper\">\n            <h3 className=\"titleFilter\">Find contacts by name</h3>\n            <input name=\"filter\" type=\"text\" className=\"input\" placeholder=\"Search...\" value={value} onChange={onChangeFilter}></input>\n        </FilterWrapper>\n    )\n}\n\nFilter.propTypes = {\n    onChangeFilter: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    })),\n}\n","import styled from 'styled-components';\n\nexport const PhonebookWrapper = styled.div`\n.mainTitle,.title{\ntext-align: center;\ncolor:#2F4F4F;\ntext-shadow: 1px 1px 2px #2F4F4F, 0 0 1em #808080;\n}\n\n.mainTitle{\n    margin-bottom:20px;\n    \n    font-size: 40px;\n}\n.title{\n    margin-bottom:10px;\n    \n    font-size: 30px;   \n}\n`","import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './contactForm/ContactForm';\nimport { ContactList } from './contactList/ContactList';\nimport { Filter } from './filter/Filter';\nimport { PhonebookWrapper } from './styledApp'\n\n\n\n// ========================= hooks App================================\nconst App = () => {\n    const [state, setState] = useState({\n        contacts: [\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n        ],\n        filter: '',\n\n    });\n\n    useEffect(() => {\n        localStorage.setItem('contacts', JSON.stringify(state.contacts))\n    }, [state.contacts])\n\n    useEffect(() => {\n        const localContacts = localStorage.getItem('contacts');\n        if (localContacts) {\n            setState((prev => (\n                { ...prev, contacts: [...JSON.parse(localContacts)] }\n            ))\n            )\n        }\n    }, [])\n\n    const handleChangeFilter = (e) => {\n        setState(prevState => ({ ...prevState, filter: e.target.value }));\n    }\n\n    const getVisibleContacts = () => {\n        const { contacts, filter } = state;\n\n        return contacts.filter((contact) =>\n            contact.name.toLowerCase().includes(filter.toLowerCase())\n\n        );\n    };\n\n\n    const addContact = (contactsObj) => {\n        const contact = {\n            id: uuidv4(),\n            name: contactsObj.name,\n            number: contactsObj.number,\n        }\n        console.log(contactsObj)\n        if (!contactsObj.name.length) {\n            alert('Please, enter your name')\n        }\n        else if (!contactsObj.number.length) {\n            alert('Please, enter your number')\n        }\n        else {\n            if (state.contacts.some((contact) =>\n                contact.name.toLowerCase() === contactsObj.name.toLowerCase())) {\n                alert(`${contactsObj.name} is already in contacts.`)\n            }\n            else {\n                setState(prev => ({\n                    ...prev, contacts: [...prev.contacts, contact]\n                }))\n\n            }\n\n        }\n\n    }\n\n    const deleteContact = (e) => {\n        const contactId = e.target.dataset.id\n        setState(prevState =>\n            ({ ...prevState, contacts: prevState.contacts.filter(({ id }) => id !== contactId) })\n        )\n    }\n    return (\n        <PhonebookWrapper>\n\n            <h1 className=\"mainTitle\">Phonebook</h1>\n            <ContactForm addContact={addContact} />\n            <h2 className=\"title\">Contacts</h2>\n            {state.contacts.length > 1 && (\n                <Filter value={state.filter} onChangeFilter={handleChangeFilter} />\n            )}\n            {state.contacts.length > 0 && (\n                <ContactList contacts={getVisibleContacts()} deleteContact={deleteContact} />\n            )}\n        </PhonebookWrapper>\n    )\n}\n\nexport default App\n// ========================= class App ================================\n// export default class App extends Component {\n//     state = {\n//         contacts: [\n//             // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//             // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//             // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//             // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//         ],\n//         filter: '',\n\n//     }\n\n//     componentDidMount() {\n//         const localContacts = localStorage.getItem('contacts');\n//         if (localContacts) {\n//             this.setState({ contacts: JSON.parse(localContacts) })\n//         }\n//     }\n\n//     componentDidUpdate(prevProps, prevState) {\n//         if (prevState.contacts !== this.state.contacts) {\n//             localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n//         }\n//     }\n\n//     handleChangeFilter = (e) => {\n//         this.setState({ filter: e.target.value });\n//     }\n\n//     getVisibleContacts = () => {\n//         const { contacts, filter } = this.state;\n\n//         return contacts.filter((contact) =>\n//             contact.name.toLowerCase().includes(filter.toLowerCase())\n//         );\n//     };\n\n\n//     addContact = (contactsObj) => {\n//         const contact = {\n//             id: uuidv4(),\n//             name: contactsObj.name,\n//             number: contactsObj.number,\n//         }\n//         if (!contactsObj.name.length) {\n//             alert('Please, enter your name')\n//         }\n//         else if (!contactsObj.number.length) {\n//             alert('Please, enter your number')\n//         }\n//         else\n//             this.setState((prevState) => {\n//                 return prevState.contacts.find(\n//                     (contact) => contact.name.toLowerCase() === contactsObj.name.toLowerCase()\n//                 )\n//                     ? alert(`${contactsObj.name} is already in contacts.`)\n//                     : {\n//                         contacts: [...prevState.contacts, contact]\n//                     }\n//             })\n//     }\n\n//     deleteContact = (e) => {\n//         const contactId = e.target.dataset.id\n//         this.setState(prevState => {\n//             return {\n//                 contacts: prevState.contacts.filter(({ id }) => id !== contactId)\n//             }\n//         })\n//     }\n\n//     render() {\n//         const { contacts, filter } = this.state;\n//         const visibleContacts = this.getVisibleContacts();\n\n//         return (\n\n//             <PhonebookWrapper>\n\n//                 <h1 className=\"mainTitle\">Phonebook</h1>\n//                 <ContactForm addContact={this.addContact} />\n//                 <h2 className=\"title\">Contacts</h2>\n//                 {contacts.length > 1 && (\n//                     <Filter value={filter} onChangeFilter={this.handleChangeFilter} />\n//                 )}\n//                 {contacts.length > 0 && (\n//                     <ContactList contacts={visibleContacts} deleteContact={this.deleteContact} />\n//                 )}\n//             </PhonebookWrapper>\n\n//         )\n//     }\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}